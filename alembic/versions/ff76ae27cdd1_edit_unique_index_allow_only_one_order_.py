"""edit unique index - allow only one order with pending or awaiting payment status

Revision ID: ff76ae27cdd1
Revises: 2f3fa6d4eabf
Create Date: 2025-08-21 01:56:42.399929

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ff76ae27cdd1'
down_revision: Union[str, Sequence[str], None] = '2f3fa6d4eabf'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('uq_orders_user_pending'), table_name='orders', postgresql_where="(status = 'PENDING'::order_status)")
    op.create_index('uq_orders_user_active', 'orders', ['user_id'], unique=True, postgresql_where=sa.text("status IN ('PENDING', 'AWAITING_PAYMENT')"))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('uq_orders_user_active', table_name='orders', postgresql_where=sa.text("status IN ('PENDING', 'AWAITING_PAYMENT')"))
    op.create_index(op.f('uq_orders_user_pending'), 'orders', ['user_id'], unique=True, postgresql_where="(status = 'PENDING'::order_status)")
    # ### end Alembic commands ###
