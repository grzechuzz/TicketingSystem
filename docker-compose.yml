services:
  api:
    build:
      context: .
      dockerfile: ./docker/api/Dockerfile
    env_file:
      - ./.env
    secrets:
      - db_password
      - secret_key
      - refresh_token_pepper
      - admin_password
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  postgres:
    image: postgres:17-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
    secrets:
      - db_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5

  audit_worker:
    build:
      context: .
      dockerfile: ./docker/api/Dockerfile
    env_file: [.env]
    secrets:
      - db_password
    depends_on:
      postgres: { condition: service_healthy }
      redis: { condition: service_healthy }
    entrypoint: []
    command: ["python", "-m", "app.workers.audit_worker"]
    restart: unless-stopped
volumes:
  postgres_data:
    driver: local

secrets:
  db_password:
    file: ./secrets/db_password
  secret_key:
    file: ./secrets/secret_key
  refresh_token_pepper:
    file: ./secrets/refresh_token_pepper
  admin_password:
    file: ./secrets/admin_password
